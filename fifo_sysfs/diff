--- ../fifo_rw/fifo.c	2013-08-15 10:59:49.775723838 -0700
+++ fifo.c	2013-08-15 20:40:55.188111908 -0700
@@ -112,6 +112,46 @@
 	.release = fifo_release,
 };
 
+
+static ssize_t read_offset_show(struct device *dev,
+								struct device_attribute *attr,
+								char *buf)
+{
+	struct fifo_dev *fifo_devp = dev_get_drvdata(dev);
+	return sprintf(buf, "%u\n", (unsigned int) (fifo_devp->read_ptr
+													- fifo_devp->fifo_start));
+}
+
+static ssize_t read_offset_store(struct device *dev,
+									struct device_attribute *attr,
+									const char *buf,
+									size_t count)
+{
+	return 0;  // stored nothing
+}
+
+static DEVICE_ATTR(read_offset, 0666, read_offset_show, read_offset_store);
+
+static ssize_t write_offset_show(struct device *dev,
+								struct device_attribute *attr,
+								char *buf)
+{
+	struct fifo_dev *fifo_devp = dev_get_drvdata(dev);
+	return sprintf(buf, "%u\n", (unsigned int) (fifo_devp->write_ptr
+													- fifo_devp->fifo_start));
+}
+
+static ssize_t write_offset_store(struct device *dev,
+									struct device_attribute *attr,
+									const char *buf,
+									size_t count)
+{
+	return 0;
+}
+
+static DEVICE_ATTR(write_offset, 0666, write_offset_show, write_offset_store);
+
+
 static int __init fifo_init(void)
 {
 	int err = 0;
@@ -154,8 +194,23 @@
 		goto err_device_create;
 	}
 
+	err = device_create_file(fifo_device, &dev_attr_read_offset);
+	if (err) {
+		goto err_file_read_offset;
+	}
+
+	err = device_create_file(fifo_device, &dev_attr_write_offset);
+	if (err) {
+		goto err_file_write_offset;
+	}
+
 	return 0;  /* success */
 
+	//device_remove_file(fifo_device, &dev_attr_write_offset);
+err_file_read_offset:
+	device_remove_file(fifo_device, &dev_attr_read_offset);
+err_file_write_offset:
+	device_destroy(fifo_class, fifo_major);
 err_device_create:
 	cdev_del(&fifo_devp->cdev);
 err_cdev_add:
@@ -170,6 +225,10 @@
 
 static void __exit fifo_exit(void)
 {
+	device_remove_file(fifo_device, &dev_attr_write_offset);
+
+	device_remove_file(fifo_device, &dev_attr_read_offset);
+
 	device_destroy(fifo_class, fifo_major);
 
 	cdev_del(&fifo_devp->cdev);
