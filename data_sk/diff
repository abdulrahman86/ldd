--- ../data_rw/data.c	2013-08-16 21:55:03.833816746 -0700
+++ data.c	2013-08-16 21:56:15.829814250 -0700
@@ -78,6 +78,35 @@
 	return count;
 }
 
+static loff_t data_llseek(struct file *filp, loff_t offset, int orig)
+{
+	struct data_dev *data_devp = filp->private_data;
+	loff_t cur_ofs;
+
+	cur_ofs = data_devp->cur_ofs;
+
+	switch (orig) {
+		case SEEK_SET:
+			cur_ofs = offset;
+			break;
+		case SEEK_CUR:
+			cur_ofs += offset;
+			break;
+		case SEEK_END:
+			cur_ofs = MAX_DATA + offset;
+			break;
+		default:
+			return -EINVAL;
+	}
+
+	if (cur_ofs < 0 || cur_ofs >= MAX_DATA)
+		return -EINVAL;
+
+	data_devp->cur_ofs = cur_ofs;
+
+	return cur_ofs;
+}
+
 static int data_release(struct inode *inode, struct file *filp)
 {
 	return 0;
@@ -88,6 +117,7 @@
 	.open = data_open,
 	.read = data_read,
 	.write = data_write,
+	.llseek  = data_llseek,
 	.release = data_release,
 };
 
@@ -107,7 +137,7 @@
 	if (!data_devp) {
 		printk(KERN_WARNING "Unable to kmalloc data_devp\n");
 		err = -ENOMEM;
-		goto err_malloc_devp;
+		goto err_malloc_data_devp;
 	}
 
 	cdev_init(&data_devp->cdev, &data_fops);
@@ -132,7 +162,7 @@
 	cdev_del(&data_devp->cdev);
 err_cdev_add:
 	kfree(data_devp);
-err_malloc_devp:
+err_malloc_data_devp:
 	class_destroy(data_class);
 	unregister_chrdev_region(data_major, 1);
 err_chrdev_region:
